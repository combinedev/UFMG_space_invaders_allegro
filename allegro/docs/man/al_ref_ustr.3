.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "al_ref_ustr" "3" "" "Allegro reference manual" ""
.hy
.SH NAME
.PP
al_ref_ustr - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <allegro5/allegro.h>

const ALLEGRO_USTR *al_ref_ustr(ALLEGRO_USTR_INFO *info, const ALLEGRO_USTR *us,
   int start_pos, int end_pos)
\f[R]
.fi
.SH DESCRIPTION
.PP
Create a read-only string that references the storage of another
ALLEGRO_USTR(3) string.
The information about the string (e.g.\ its size) is stored in the
structure pointed to by the \f[V]info\f[R] parameter.
The new string will not have any other storage allocated of its own, so
if you allocate the \f[V]info\f[R] structure on the stack then no
explicit \[lq]free\[rq] operation is required.
.PP
The referenced interval is [\f[V]start_pos\f[R], \f[V]end_pos\f[R]).
Both are byte offsets.
.PP
The string is valid until the underlying string is modified or
destroyed.
.PP
If you need a range of code-points instead of bytes, use
al_ustr_offset(3) to find the byte offsets.
.SH SEE ALSO
.PP
al_ref_cstr(3), al_ref_buffer(3)
