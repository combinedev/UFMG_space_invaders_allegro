.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "al_ustr_next" "3" "" "Allegro reference manual" ""
.hy
.SH NAME
.PP
al_ustr_next - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <allegro5/allegro.h>

bool al_ustr_next(const ALLEGRO_USTR *us, int *pos)
\f[R]
.fi
.SH DESCRIPTION
.PP
Find the byte offset of the next code point in string, beginning at
\f[V]*pos\f[R].
\f[V]*pos\f[R] does not have to be at the beginning of a code point.
.PP
Returns true on success, and the value pointed to by \f[V]pos\f[R] will
be updated to the found offset.
Otherwise returns false if \f[V]*pos\f[R] was already at the end of the
string, and \f[V]*pos\f[R] is unmodified.
.PP
This function just looks for an appropriate byte; it doesn\[cq]t check
if found offset is the beginning of a valid code point.
If you are working with possibly invalid UTF-8 strings then it could
skip over some invalid bytes.
.SH SEE ALSO
.PP
al_ustr_prev(3)
